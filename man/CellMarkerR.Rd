% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class_CellMarker.r
\name{CellMarkerR}
\alias{CellMarkerR}
\title{CellMarker Class}
\description{
This class contains two core drawing functions of CellMarker website.
}
\note{
If the function viewMarker or viewCell has not been executed, ChartResult and TableResult will get NULL.
If the function viewMarker or viewCell fails to execute successfully, ChartResult and TableResult will remain the result of the last successful execution.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CellMarker-new}{\code{CellMarkerR$new()}}
\item \href{#method-CellMarker-getViewMarkerChartResult}{\code{CellMarkerR$getViewMarkerChartResult()}}
\item \href{#method-CellMarker-getViewMarkerTableResult}{\code{CellMarkerR$getViewMarkerTableResult()}}
\item \href{#method-CellMarker-saveViewMarkerChartResult}{\code{CellMarkerR$saveViewMarkerChartResult()}}
\item \href{#method-CellMarker-saveViewMarkerTableResult}{\code{CellMarkerR$saveViewMarkerTableResult()}}
\item \href{#method-CellMarker-viewMarker}{\code{CellMarkerR$viewMarker()}}
\item \href{#method-CellMarker-getViewCellChartResult}{\code{CellMarkerR$getViewCellChartResult()}}
\item \href{#method-CellMarker-getViewCellTableResult}{\code{CellMarkerR$getViewCellTableResult()}}
\item \href{#method-CellMarker-getViewCellRankResult}{\code{CellMarkerR$getViewCellRankResult()}}
\item \href{#method-CellMarker-saveViewCellChartResult}{\code{CellMarkerR$saveViewCellChartResult()}}
\item \href{#method-CellMarker-saveViewCellTableResult}{\code{CellMarkerR$saveViewCellTableResult()}}
\item \href{#method-CellMarker-saveViewCellRankResult}{\code{CellMarkerR$saveViewCellRankResult()}}
\item \href{#method-CellMarker-viewCell}{\code{CellMarkerR$viewCell()}}
\item \href{#method-CellMarker-clone}{\code{CellMarkerR$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-new"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-getViewMarkerChartResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-getViewMarkerChartResult}{}}}
\subsection{Method \code{getViewMarkerChartResult()}}{
Return the image result of the function viewMarker , which is a plotly object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$getViewMarkerChartResult()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-getViewMarkerTableResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-getViewMarkerTableResult}{}}}
\subsection{Method \code{getViewMarkerTableResult()}}{
Return the table result of the function viewMarker , which is a data.frame object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$getViewMarkerTableResult()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-saveViewMarkerChartResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-saveViewMarkerChartResult}{}}}
\subsection{Method \code{saveViewMarkerChartResult()}}{
Save the image result of the function viewMarker.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$saveViewMarkerChartResult(filePath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{A complete file path, but the file extension must be html.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-saveViewMarkerTableResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-saveViewMarkerTableResult}{}}}
\subsection{Method \code{saveViewMarkerTableResult()}}{
Save the table result of the function viewMarker.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$saveViewMarkerTableResult(filePath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{A complete file path, but the file extension must be csv or xlsx.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-viewMarker"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-viewMarker}{}}}
\subsection{Method \code{viewMarker()}}{
Draw a dynamic lattice diagram by R package plotly to show the query results of a specified marker in the CellMarker database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$viewMarker(
  symbol = NULL,
  marker = NULL,
  geneid = NULL,
  title_name = "CellMarker_Result",
  species = "Human",
  cell_type = "All",
  marker_source = "All",
  year_range = "All",
  show_undefined = FALSE,
  show_filter = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Seclect the symbol to query.Only one of the parameters symbol marker or geneid can be filled at a time.}

\item{\code{marker}}{Seclect the marker to query.Only one of the parameters symbol marker or geneid can be filled at a time.}

\item{\code{geneid}}{Seclect the geneid to query.Only one of the parameters symbol marker or geneid can be filled at a time.}

\item{\code{title_name}}{Customize the title of the image.}

\item{\code{species}}{Select the species to query. The value must be one of c('Human', 'Mouse', 'All').}

\item{\code{cell_type}}{Select the cell_type to query. The value must be one of c('Normal cell','Cancer cell','All').}

\item{\code{marker_source}}{Select the marker_source to query. The value must be one of c('Experiment','Company','Review','Single-cell sequencing','All').}

\item{\code{year_range}}{Customize the year_range to query. The value must be either 'All' or an expression. If it is an expression, it must contain the term 'year'. For example, expressions could be 'year >= 2012', 'year <= 2011', or 'year >= 2010 && year <= 2020'.}

\item{\code{show_undefined}}{A Boolean value to determine whether to display undefined tissue_class.}

\item{\code{show_filter}}{A Boolean value to determine whether to display filter process.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-getViewCellChartResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-getViewCellChartResult}{}}}
\subsection{Method \code{getViewCellChartResult()}}{
Return the image result of the function viewCell , which is a plotly object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$getViewCellChartResult()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-getViewCellTableResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-getViewCellTableResult}{}}}
\subsection{Method \code{getViewCellTableResult()}}{
Return the table result of the function viewCell , which is a data.frame object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$getViewCellTableResult()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-getViewCellRankResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-getViewCellRankResult}{}}}
\subsection{Method \code{getViewCellRankResult()}}{
Return the rank result of the function viewCell , which is a data.frame object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$getViewCellRankResult()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-saveViewCellChartResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-saveViewCellChartResult}{}}}
\subsection{Method \code{saveViewCellChartResult()}}{
Save the image result of the function viewCell.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$saveViewCellChartResult(filePath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{A complete file path, but the file extension must be html.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-saveViewCellTableResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-saveViewCellTableResult}{}}}
\subsection{Method \code{saveViewCellTableResult()}}{
Save the table result of the function viewCell.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$saveViewCellTableResult(filePath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{A complete file path, but the file extension must be csv or xlsx.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-saveViewCellRankResult"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-saveViewCellRankResult}{}}}
\subsection{Method \code{saveViewCellRankResult()}}{
Save the rank result of the function viewCell.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$saveViewCellRankResult(filePath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{A complete file path, but the file extension must be csv or xlsx.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-viewCell"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-viewCell}{}}}
\subsection{Method \code{viewCell()}}{
Draw a WorkCloudChart by R package wordcloud2 to show the query results of a specified cell in the CellMarker database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$viewCell(
  tissue_class_number = NULL,
  tissue_type_number = NULL,
  cell_name_number = NULL,
  species = "Human",
  cell_type = "All",
  marker_source = "All",
  year_range = "All",
  show_undefined = FALSE,
  show_filter = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tissue_class_number}}{Select the number of tissue_class to query.The value must be in range.}

\item{\code{tissue_type_number}}{Select the number of tissue_type to query.The value must be in range.}

\item{\code{cell_name_number}}{Select the number of cell_name to query.The value must be in range.}

\item{\code{species}}{Select the species to query. The value must be one of c('Human', 'Mouse', 'All').}

\item{\code{cell_type}}{Select the cell_type to query. The value must be one of c('Normal cell','Cancer cell','All').}

\item{\code{marker_source}}{Select the marker_source to query. The value must be one of c('Experiment','Company','Review','Single-cell sequencing','All').}

\item{\code{year_range}}{Customize the year_range to query. The value must be either 'All' or an expression. If it is an expression, it must contain the term 'year'. For example, expressions could be 'year >= 2012', 'year <= 2011', or 'year >= 2010 && year <= 2020'.}

\item{\code{show_undefined}}{A Boolean value to determine whether to display undefined tissue_class.}

\item{\code{show_filter}}{A Boolean value to determine whether to display filter process.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CellMarker-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CellMarker-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CellMarkerR$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
